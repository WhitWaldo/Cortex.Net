<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cortex.Net.Fody</name>
    </assembly>
    <members>
        <member name="T:Cortex.Net.Fody.ActionWeaver">
            <summary>
            Weaves methods decorated with an <see cref="T:Cortex.Net.Api.ActionAttribute"/>.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ActionWeaver.InnerCounterFieldPrefix">
            <summary>
            The prefix for an inner method that is the target of an action.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ActionWeaver.InnerActionFieldPrefix">
            <summary>
            The prefix for an inner field that contains the action.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ActionWeaver.cortexWeaver">
            <summary>
            A reference to the parent Cortex.Net weaver.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ActionWeaver.processorQueue">
            <summary>
            The queue to add ILProcessor actions to.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.ActionWeaver.#ctor(Fody.BaseModuleWeaver,Cortex.Net.Fody.ISharedStateAssignmentILProcessorQueue)">
            <summary>
            Initializes a new instance of the <see cref="T:Cortex.Net.Fody.ActionWeaver"/> class.
            </summary>
            <param name="parentWeaver">A reference to the Parent Cortex.Net weaver.</param>
            <param name="processorQueue">The queue to add ILProcessor actions to.</param>
            <exception cref="T:System.ArgumentNullException">When any of the arguments is null.</exception>
        </member>
        <member name="M:Cortex.Net.Fody.ActionWeaver.Execute">
            <summary>
            Executes this action weaver.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.ActionWeaver.ExtendActionMethodBody(Mono.Cecil.MethodDefinition,Mono.Cecil.TypeReference,Mono.Cecil.FieldDefinition,Mono.Cecil.FieldDefinition)">
            <summary>
            Rewrites the body of the method with the Action Attribute to call the Cortex.NET action.
            </summary>
            <param name="methodDefinition">The method definition to rewrite.</param>
            <param name="actionType">The type of the action delegate to invoke.</param>
            <param name="counterFieldDefinition">The definition of the field that holds the entrance counter.</param>
            <param name="actionFieldDefinition">The definition of the field that holds the action delegate.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ActionWeaver.EmitSharedStateSetter(Mono.Cecil.Cil.ILProcessor,Mono.Cecil.FieldReference,Mono.Cecil.MethodDefinition,Mono.Cecil.TypeReference,Mono.Cecil.FieldDefinition)">
            <summary>
            Emits most of the body of the shared state setter.
            </summary>
            <param name="processor">The ILProcessor to use.</param>
            <param name="sharedStateBackingField">The backing field for the shared state.</param>
            <param name="methodDefinition">The inner definition of the action method.</param>
            <param name="actionType">The action type.</param>
            <param name="actionFieldDefinition">The field definition.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ActionWeaver.WeaveMethod(Mono.Cecil.MethodDefinition)">
            <summary>
            Weaves a method that was Decorated with the <see cref="T:Cortex.Net.Api.ActionAttribute"/>.
            </summary>
            <param name="methodDefinition">The method definition.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ActionWeaver.GetActionType(Mono.Cecil.MethodDefinition)">
            <summary>
            Gets the Action type for the private field that is added to the class for the private method.
            </summary>
            <param name="methodDefinition">The method definition for the action.</param>
            <returns>A type reference.</returns>
        </member>
        <member name="T:Cortex.Net.Fody.CortexWeaver">
            <summary>
            Orchestrates weaving of classes with Cortex.Net Observables, Actions and Reactions.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.CortexWeaver.Execute">
            <summary>
            Executes the <see cref="T:Cortex.Net.Fody.CortexWeaver"/>.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.CortexWeaver.GetAssembliesForScanning">
            <summary>
            Return a list of assembly names for scanning. Used as a list for Fody.BaseModuleWeaver.FindType.
            </summary>
            <returns>All types in the references assembly.</returns>
        </member>
        <member name="T:Cortex.Net.Fody.ISharedStateAssignmentILProcessorQueue">
            <summary>
            Interface that holds a Queue with <see cref="T:Mono.Cecil.Cil.ILProcessor"/> actions to be executed when <see cref="T:Cortex.Net.ISharedState"/> is assigned on an observable oject.
            </summary>
        </member>
        <member name="P:Cortex.Net.Fody.ISharedStateAssignmentILProcessorQueue.SharedStateAssignmentQueue">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Queue`1"/> with actions to be executed to emit the IL code on <see cref="T:Cortex.Net.ISharedState"/> Assignment.
            </summary>
        </member>
        <member name="T:Cortex.Net.Fody.MethodReferenceExtensions">
            <summary>
            Extension methods for <see cref="T:Mono.Cecil.MethodReference"/> instances.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.MethodReferenceExtensions.GetGenericMethodOnInstantance(Mono.Cecil.MethodReference,Mono.Cecil.TypeReference)">
            <summary>
            Gets a method reference to the generic method on the instantiated type specified.
            </summary>
            <param name="genericMethod">A reference to the generic method.</param>
            <param name="instantiantedType">The instantiated type.</param>
            <returns>A new method reference.</returns>
        </member>
        <member name="T:Cortex.Net.Fody.ObservableObjectInterfaceWeaver">
            <summary>
            Weaves the implementation for <see cref="T:Cortex.Net.IObservableObject"/> on an object.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ObservableObjectInterfaceWeaver.cortexWeaver">
            <summary>
            A reference to the parent Cortex.Net weaver.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableObjectInterfaceWeaver.#ctor(Cortex.Net.Fody.CortexWeaver)">
            <summary>
            Initializes a new instance of the <see cref="T:Cortex.Net.Fody.ObservableObjectInterfaceWeaver"/> class.
            </summary>
            <param name="cortexWeaver">The cortex weaver.</param>
        </member>
        <member name="P:Cortex.Net.Fody.ObservableObjectInterfaceWeaver.SharedStateAssignmentQueue">
            <summary>
            Gets a Queue with delegates to be executed to emit the IL code on sharedStateAssignment.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableObjectInterfaceWeaver.Execute">
            <summary>
            Executes this weaver.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableObjectInterfaceWeaver.ExecuteProcessorActions(Mono.Cecil.Cil.ILProcessor,Mono.Cecil.FieldDefinition,System.Collections.Generic.IEnumerable{System.Action{Mono.Cecil.Cil.ILProcessor,Mono.Cecil.FieldReference}})">
            <summary>
            Executes the processoractions agains the processor.
            </summary>
            <param name="processor">The processor to use.</param>
            <param name="backingField">The backing field for the <see cref="T:Cortex.Net.ISharedState"/> instance.</param>
            <param name="processorActions">The processor actions to execute.</param>
        </member>
        <member name="T:Cortex.Net.Fody.ObservableWeaver">
            <summary>
            Weaves properties and classes decorated with an <see cref="T:Cortex.Net.Api.ObservableAttribute"/>.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ObservableWeaver.InnerObservableObjectFieldName">
            <summary>
            The name of an Inner ObservableObjectField.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ObservableWeaver.cortexWeaver">
            <summary>
            A reference to the parent Cortex.Net weaver.
            </summary>
        </member>
        <member name="F:Cortex.Net.Fody.ObservableWeaver.processorQueue">
            <summary>
            The queue to add ILProcessor actions to.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.#ctor(Fody.BaseModuleWeaver,Cortex.Net.Fody.ISharedStateAssignmentILProcessorQueue)">
            <summary>
            Initializes a new instance of the <see cref="T:Cortex.Net.Fody.ObservableWeaver"/> class.
            </summary>
            <param name="parentWeaver">A reference to the Parent Cortex.Net weaver.</param>
            <param name="processorQueue">The queue to add ILProcessor actions to.</param>
            <exception cref="T:System.ArgumentNullException">When any of the arguments is null.</exception>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.Execute">
            <summary>
            Executes this observable weaver.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.WeaveClass(Mono.Cecil.TypeDefinition)">
            <summary>
            Weaves an entire class.
            </summary>
            <param name="decoratedClass">The class that was decorated with the attribute.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.WeaveProperty(Mono.Cecil.PropertyDefinition)">
            <summary>
            Weaves a property on an observable object.
            </summary>
            <param name="property">The property to make observable.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.RewriteGetMethod(Mono.Cecil.MethodDefinition,Mono.Cecil.FieldDefinition,System.String,Mono.Cecil.TypeReference)">
            <summary>
            Rewrites the Get Method of the Property.
            </summary>
            <param name="getMethod">The get method of the property.</param>
            <param name="observableObjectField">The field for the observable object.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyType">The property Type.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.RewriteSetMethod(Mono.Cecil.MethodDefinition,Mono.Cecil.FieldDefinition,System.String,Mono.Cecil.TypeReference)">
            <summary>
            Rewrites the Set Method of the Property.
            </summary>
            <param name="setMethod">The set method of the property.</param>
            <param name="observableObjectField">The field for the observable object.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyType">The property Type.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.EmitObservableObjectInit(Mono.Cecil.Cil.ILProcessor,System.String,Mono.Cecil.TypeReference,Mono.Cecil.FieldReference,Mono.Cecil.FieldDefinition)">
            <summary>
            Emits the IL code to initialize the observable object. for the <see cref="P:Cortex.Net.IObservableObject.SharedState"/> setter.
            </summary>
            <param name="processor">The <see cref="T:Mono.Cecil.Cil.ILProcessor"/> instance that will generate the setter body.</param>
            <param name="objectName">The name of the object.</param>
            <param name="enhancerType">The type reference of the enhancer to use.</param>
            <param name="sharedStateBackingField">A <see cref="T:Mono.Cecil.FieldReference"/> to the backing field of the Shared STate.</param>
            <param name="observableObjectField">A <see cref="T:Mono.Cecil.FieldDefinition"/> for the field where the <see cref="T:Cortex.Net.Types.ObservableObject"/> instance is kept.</param>
        </member>
        <member name="M:Cortex.Net.Fody.ObservableWeaver.EmitObservablePropertyAdd(Mono.Cecil.Cil.ILProcessor,System.String,Mono.Cecil.TypeReference,Mono.Cecil.TypeReference,Mono.Cecil.FieldReference,Mono.Cecil.FieldDefinition)">
            <summary>
            Emits the IL code to add an Observable property to the observable object. for the <see cref="P:Cortex.Net.IObservableObject.SharedState"/> setter.
            </summary>
            <param name="processor">The <see cref="T:Mono.Cecil.Cil.ILProcessor"/> instance that will generate the setter body.</param>
            <param name="propertyName">The name of the object.</param>
            <param name="propertyType">The type reference of Property.</param>
            <param name="enhancerType">The type reference of the enhancer to use.</param>
            <param name="sharedStateBackingField">A <see cref="T:Mono.Cecil.FieldReference"/> to the backing field of the Shared STate.</param>
            <param name="observableObjectField">A <see cref="T:Mono.Cecil.FieldDefinition"/> for the field where the <see cref="T:Cortex.Net.Types.ObservableObject"/> instance is kept.</param>
        </member>
        <member name="T:Cortex.Net.Fody.OpcodeSelector">
            <summary>
            Opcode selector for Short Forms.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.OpcodeSelector.Ldarg(Mono.Cecil.Cil.ILProcessor,System.Int32)">
            <summary>
            Gets the best short form opcode for Ldarg.
            </summary>
            <param name="processor">The Il Processor to generate the instruction on.</param>
            <param name="index">The index.</param>
            <returns>An instruction.</returns>
        </member>
        <member name="M:Cortex.Net.Fody.OpcodeSelector.Ldloc(Mono.Cecil.Cil.ILProcessor,System.Int32)">
            <summary>
            Gets the best short form opcode for Ldloc.
            </summary>
            <param name="processor">The Il Processor to generate the instruction on.</param>
            <param name="index">The index.</param>
            <returns>An instruction.</returns>
        </member>
        <member name="M:Cortex.Net.Fody.OpcodeSelector.GetBestShortForm(Mono.Cecil.Cil.ILProcessor,Mono.Cecil.Cil.OpCode,Mono.Cecil.Cil.OpCode,Mono.Cecil.Cil.OpCode,Mono.Cecil.Cil.OpCode,Mono.Cecil.Cil.OpCode,Mono.Cecil.Cil.OpCode,System.Int32)">
            <summary>
            Gets the best short form for an Instruction.
            </summary>
            <param name="processor">The IL Processor to create the instruction on.</param>
            <param name="opCode0">The shortform opcode for 0.</param>
            <param name="opCode1">The shortform opcode for 1.</param>
            <param name="opCode2">The shortform opcode for 2.</param>
            <param name="opCode3">The shortform opcode for 3.</param>
            <param name="opCodeS">The shortform opcode for 4-255.</param>
            <param name="opCode">The opcode for everything else..</param>
            <param name="index">The index for the instruction.</param>
            <returns>An instruction.</returns>
        </member>
        <member name="T:Cortex.Net.Fody.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Cortex.Net.Fody.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Cortex.Net.Fody.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Cortex.Net.Fody.Properties.Resources.MoreThan16Parameters">
            <summary>
              Looks up a localized string similar to CannotHandle more than 16 parameters on Action Method: ({0}).
            </summary>
        </member>
        <member name="P:Cortex.Net.Fody.Properties.Resources.PropertyNotAutogenerated">
            <summary>
              Looks up a localized string similar to Property with name ({0}) on class ({1}) is not an auto property generated by the compiler. It&apos;s not possible to add the ObservableAttribute. Try manually creating an observable property or use an Atom instead..
            </summary>
        </member>
        <member name="T:Cortex.Net.Fody.PropertyDefinitionExtensions">
            <summary>
            Extension methods for <see cref="T:Mono.Cecil.PropertyDefinition"/> instances.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.PropertyDefinitionExtensions.GetBackingField(Mono.Cecil.PropertyDefinition)">
            <summary>
            Gets the backing field of an Auto generated property.
            </summary>
            <param name="propertyDefinition">The property definition to get the backing field from.</param>
            <returns>The field definition of the Backing field.</returns>
        </member>
        <member name="T:Cortex.Net.Fody.TypeDefinitionExtenions">
            <summary>
            Extension methods for <see cref="T:Mono.Cecil.TypeDefinition"/> instances.
            </summary>
        </member>
        <member name="M:Cortex.Net.Fody.TypeDefinitionExtenions.CreateBackingField(Mono.Cecil.TypeDefinition,Mono.Cecil.TypeReference,System.String)">
            <summary>
            Creates a backing field for a property.
            </summary>
            <param name="classType">The type reference of the class.</param>
            <param name="fieldType">The type reference of the Field.</param>
            <param name="name">The name of the Property.</param>
            <returns>The Field definition. It has already been added to the class type.</returns>
        </member>
        <member name="M:Cortex.Net.Fody.TypeDefinitionExtenions.CreateField(Mono.Cecil.TypeDefinition,Mono.Cecil.TypeReference,System.String)">
            <summary>
            Creates a field.
            </summary>
            <param name="classType">The type reference of the class.</param>
            <param name="fieldType">The type reference of the Field.</param>
            <param name="name">The name of the field.</param>
            <returns>The Field definition. It has already been added to the class type.</returns>
        </member>
        <member name="M:Cortex.Net.Fody.TypeDefinitionExtenions.CreateDefaultGetter(Mono.Cecil.TypeDefinition,Mono.Cecil.FieldDefinition,System.String,Mono.Cecil.MethodAttributes)">
            <summary>
            Creates a default getter for a property.
            </summary>
            <param name="classType">The type reference of the class.</param>
            <param name="backingField">A reference to the backing field.</param>
            <param name="name">The name of the property.</param>
            <param name="methodAttributes">The methodAttributes for this getter. Default value is MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.SpecialName.</param>
            <returns>A method definition. The method is already added to the <paramref name="classType"/>.</returns>
        </member>
        <member name="M:Cortex.Net.Fody.TypeDefinitionExtenions.CreateDefaultSetter(Mono.Cecil.TypeDefinition,Mono.Cecil.FieldDefinition,System.String,Mono.Cecil.MethodAttributes,System.Action{Mono.Cecil.Cil.ILProcessor})">
            <summary>
            Creates a default getter for a property.
            </summary>
            <param name="classType">The type reference of the class.</param>
            <param name="backingField">A reference to the backing field.</param>
            <param name="name">The name of the property.</param>
            <param name="methodAttributes">The methodAttributes for this getter. Default value is MethodAttributes.Public | MethodAttributes.HideBySig | MethodAttributes.SpecialName.</param>
            <param name="emitAction">Extra emit action after default setter.</param>
            <returns>A method definition. The method is already added to the <paramref name="classType"/>.</returns>
        </member>
        <member name="M:Cortex.Net.Fody.TypeDefinitionExtenions.CreateProperty(Mono.Cecil.TypeDefinition,System.String,Mono.Cecil.MethodDefinition,Mono.Cecil.MethodDefinition)">
            <summary>
            Creates a property using the specified getter / setter.
            </summary>
            <param name="classType">The type of the class to create the property on.</param>
            <param name="name">The name of the property.</param>
            <param name="getter">The getter for the property.</param>
            <param name="setter">The setter for the property. Can be null.</param>
            <returns>The created property definitition.</returns>
        </member>
    </members>
</doc>
